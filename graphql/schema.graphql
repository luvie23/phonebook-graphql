"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

#import auth.graphql

"Indicates what fields are available at the top level of a query operation."
type Query {
    "Find a single user by an identifying attribute."
    user(
      "Search by primary key."
      id: ID @eq

    ): User @find @guard

    "List multiple users."
    users(
      "Filters by name. Accepts SQL LIKE wildcards `%` and `_`."
      name: String @where(operator: "like")
    ): [User!]! @paginate @guard

    "Get specific contact using name"
    viewContact(
        name: String @eq
    ): Contact @find @guard

    "List all contacts, can also filter with name"
    listContacts (
      name: String @where(operator: "like")
    ): [Contact!]! @all  @guard
}

type Mutation {
    "Create a new contact"
    createContact(
        name: String!

        contact_no: String!
    ): Contact! @create @guard

    updateContact(
        id: ID!

        name: String

        contact_no: String
    ): Contact! @update @guard

    deleteContact(
        id: ID! @whereKey
    ): Contact @delete @guard

    createUser(
        name: String!

        email: String! @rules(apply: ["email"])

        password: String!
    ): User! @create
}

"Account of a person who utilizes this application."
type User {
    "Unique primary key."
    id: ID!

    "Non-unique name."
    name: String!

    "Unique email address."
    email: String!

    password: String!

    "When the email was verified."
    email_verified_at: DateTime

    "When the account was created."
    created_at: DateTime!

    "When the account was last updated."
    updated_at: DateTime!
}


type Contact {
    "Unique primary key."
    id: ID!

    "Non-unique name."
    name: String!

    contact_no: String!

    created_at: DateTime!

    updated_at: DateTime!
}